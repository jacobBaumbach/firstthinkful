#Import Data and clean data. Then the program runs the linear regression Interest.Rate= a + b(1)*Fico.Score + b(3)*Amount.Requested

import pandas as pd #import pandas database as pd
import matplotlib.pyplot as plt #import plot package
import numpy as np #import numpy package as np
import statsmodels.api as sm#import api portion of statmodels package as sm

ld = pd.read_csv('https://spark-public.s3.amazonaws.com/dataanalysis/loansData.csv')#import csv data from link into object ld

ld.dropna(inplace=True)#eliminat null values

cleanFR=ld['FICO.Range'].map(lambda x:x.split('-'))#converts each row of 'FICO.Range' into list that splits at -

cleanFR=cleanFR.map(lambda x: [int(n) for n in x])#converts each element of all the lists in 'FICO.Range' to int
ld['FICO.Score']=(cleanFR.map(lambda x: x[0]))#creates new col in ld that's filled with the first element of each list of cleanFR

ld['Interest.Rate']=ld['Interest.Rate'].map( lambda x: float(x.rstrip('%')))#goes through each row of 'Interest.Rate' col and eliminates the % and converts the data to float

ld['Loan.Length']=ld['Loan.Length'].map( lambda x: float(x.rstrip('months')))#goes through each row of 'Loan Length' eliminates the months and then converts the data to float

#FICO.Score histogram
plt.figure()#generate new figure
ld.hist(column='FICO.Score')#generates histogram using data from FICO.Score col 
plt.show()#prints plot

#Scatter Plot Matrix
plt.figure()#generate new figure
a=pd.scatter_matrix(ld, alpha=0.05, figsize=(10,10),diagonal='hist')#generates Scatter Plot matrix with all data from ld with histograms along the diagonal
plt.show()#prints plot

intrate=ld['Interest.Rate']#sets intrate equal to data from Interest.Rate col
loanamt=ld['Amount.Requested']#sets loanamt equal to data from Amount.Requested col
fico=ld['FICO.Score']#sets fico equal to data from FICO.Score col

y=np.matrix(intrate).transpose()#transposes the intrate vector
x1=np.matrix(fico).transpose()#transposes the fico vector
x2=np.matrix(loanamt).transpose()#transposes the loanamt vector

x=np.column_stack([x1, x2])#places vectors x1 and x2 into a matrix

X=sm.add_constant(x)#add constant vector to x matrix
model=sm.OLS(y,X)#fit linear regression model between dependent variable y and the independent variables X
f=model.fit()#store data generated by linear reg

print f.summary()#prints results of regressions






